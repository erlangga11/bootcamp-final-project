#App config
info.app.name=@project.artifactId@
info.app.description=@project.description@
info.app.version=@project.version@
info.java-vendor=${java.specification.vendor}
server.port=7200

#Eureka settings
spring.application.name=post-service
spring.cloud.config.profile=default
spring.cloud.config.enabled=false
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:${random.uuid}
management.endpoints.web.exposure.include=*

#PostgreSQL settings
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/co_create_db
spring.datasource.username=postgres
spring.datasource.password=admin

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Kafka config
app.topic=logService
spring.kafka.groupId=bniFinalProject
spring.kafka.bootstrap-servers=localhost:9099
spring.kafka.consumer.bootstrap-servers=localhost:9099
spring.kafka.consumer.group-id=bniFinalProject
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.bootstrap-servers=localhost:9099
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
